// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: messages-benchmark.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request: Ask device for a list of names of all supported benchmarks
// @start
// @next Benchmarks
// @next Failure
type BenchmarkListNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BenchmarkListNames) Reset() {
	*x = BenchmarkListNames{}
	mi := &file_messages_benchmark_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BenchmarkListNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchmarkListNames) ProtoMessage() {}

func (x *BenchmarkListNames) ProtoReflect() protoreflect.Message {
	mi := &file_messages_benchmark_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchmarkListNames.ProtoReflect.Descriptor instead.
func (*BenchmarkListNames) Descriptor() ([]byte, []int) {
	return file_messages_benchmark_proto_rawDescGZIP(), []int{0}
}

// *
// Response: Contains the list of names of all supported benchmarks
// @end
type BenchmarkNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (x *BenchmarkNames) Reset() {
	*x = BenchmarkNames{}
	mi := &file_messages_benchmark_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BenchmarkNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchmarkNames) ProtoMessage() {}

func (x *BenchmarkNames) ProtoReflect() protoreflect.Message {
	mi := &file_messages_benchmark_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchmarkNames.ProtoReflect.Descriptor instead.
func (*BenchmarkNames) Descriptor() ([]byte, []int) {
	return file_messages_benchmark_proto_rawDescGZIP(), []int{1}
}

func (x *BenchmarkNames) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// *
// Request: Ask device to run a benchmark
// @start
// @next BenchmarkResult
// @next Failure
type BenchmarkRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *BenchmarkRun) Reset() {
	*x = BenchmarkRun{}
	mi := &file_messages_benchmark_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BenchmarkRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchmarkRun) ProtoMessage() {}

func (x *BenchmarkRun) ProtoReflect() protoreflect.Message {
	mi := &file_messages_benchmark_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchmarkRun.ProtoReflect.Descriptor instead.
func (*BenchmarkRun) Descriptor() ([]byte, []int) {
	return file_messages_benchmark_proto_rawDescGZIP(), []int{2}
}

func (x *BenchmarkRun) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// *
// Response: Contains the result of the benchmark
// @end
type BenchmarkResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Unit  *string `protobuf:"bytes,3,opt,name=unit" json:"unit,omitempty"`
}

func (x *BenchmarkResult) Reset() {
	*x = BenchmarkResult{}
	mi := &file_messages_benchmark_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BenchmarkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchmarkResult) ProtoMessage() {}

func (x *BenchmarkResult) ProtoReflect() protoreflect.Message {
	mi := &file_messages_benchmark_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchmarkResult.ProtoReflect.Descriptor instead.
func (*BenchmarkResult) Descriptor() ([]byte, []int) {
	return file_messages_benchmark_proto_rawDescGZIP(), []int{3}
}

func (x *BenchmarkResult) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *BenchmarkResult) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

var File_messages_benchmark_proto protoreflect.FileDescriptor

var file_messages_benchmark_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x68, 0x77, 0x2e, 0x74,
	0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61,
	0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x0e, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x52, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x42, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x42, 0x41, 0x80, 0xa6, 0x1d, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x74, 0x72, 0x65, 0x7a,
	0x6f, 0x72, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42,
	0x16, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
}

var (
	file_messages_benchmark_proto_rawDescOnce sync.Once
	file_messages_benchmark_proto_rawDescData = file_messages_benchmark_proto_rawDesc
)

func file_messages_benchmark_proto_rawDescGZIP() []byte {
	file_messages_benchmark_proto_rawDescOnce.Do(func() {
		file_messages_benchmark_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_benchmark_proto_rawDescData)
	})
	return file_messages_benchmark_proto_rawDescData
}

var file_messages_benchmark_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_messages_benchmark_proto_goTypes = []any{
	(*BenchmarkListNames)(nil), // 0: hw.trezor.messages.bitcoin.BenchmarkListNames
	(*BenchmarkNames)(nil),     // 1: hw.trezor.messages.bitcoin.BenchmarkNames
	(*BenchmarkRun)(nil),       // 2: hw.trezor.messages.bitcoin.BenchmarkRun
	(*BenchmarkResult)(nil),    // 3: hw.trezor.messages.bitcoin.BenchmarkResult
}
var file_messages_benchmark_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_messages_benchmark_proto_init() }
func file_messages_benchmark_proto_init() {
	if File_messages_benchmark_proto != nil {
		return
	}
	file_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_benchmark_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_benchmark_proto_goTypes,
		DependencyIndexes: file_messages_benchmark_proto_depIdxs,
		MessageInfos:      file_messages_benchmark_proto_msgTypes,
	}.Build()
	File_messages_benchmark_proto = out.File
	file_messages_benchmark_proto_rawDesc = nil
	file_messages_benchmark_proto_goTypes = nil
	file_messages_benchmark_proto_depIdxs = nil
}
