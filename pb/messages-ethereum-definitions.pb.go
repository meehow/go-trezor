// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: messages-ethereum-definitions.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Ethereum definitions type enum.
// Used to check the encoded EthereumNetworkInfo or EthereumTokenInfo message.
type EthereumDefinitionType int32

const (
	EthereumDefinitionType_NETWORK EthereumDefinitionType = 0
	EthereumDefinitionType_TOKEN   EthereumDefinitionType = 1
)

// Enum value maps for EthereumDefinitionType.
var (
	EthereumDefinitionType_name = map[int32]string{
		0: "NETWORK",
		1: "TOKEN",
	}
	EthereumDefinitionType_value = map[string]int32{
		"NETWORK": 0,
		"TOKEN":   1,
	}
)

func (x EthereumDefinitionType) Enum() *EthereumDefinitionType {
	p := new(EthereumDefinitionType)
	*p = x
	return p
}

func (x EthereumDefinitionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthereumDefinitionType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_ethereum_definitions_proto_enumTypes[0].Descriptor()
}

func (EthereumDefinitionType) Type() protoreflect.EnumType {
	return &file_messages_ethereum_definitions_proto_enumTypes[0]
}

func (x EthereumDefinitionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EthereumDefinitionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EthereumDefinitionType(num)
	return nil
}

// Deprecated: Use EthereumDefinitionType.Descriptor instead.
func (EthereumDefinitionType) EnumDescriptor() ([]byte, []int) {
	return file_messages_ethereum_definitions_proto_rawDescGZIP(), []int{0}
}

// *
// Ethereum network definition. Used to (de)serialize the definition.
//
// Definition types should not be cross-parseable, i.e., it should not be possible to
// incorrectly parse network info as token info or vice versa.
// To achieve that, the first field is wire type varint while the second field is wire type
// length-delimited. Both are a mismatch for the token definition.
//
// @embed
type EthereumNetworkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId *uint64 `protobuf:"varint,1,req,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	Symbol  *string `protobuf:"bytes,2,req,name=symbol" json:"symbol,omitempty"`
	Slip44  *uint32 `protobuf:"varint,3,req,name=slip44" json:"slip44,omitempty"`
	Name    *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
}

func (x *EthereumNetworkInfo) Reset() {
	*x = EthereumNetworkInfo{}
	mi := &file_messages_ethereum_definitions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthereumNetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumNetworkInfo) ProtoMessage() {}

func (x *EthereumNetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_ethereum_definitions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumNetworkInfo.ProtoReflect.Descriptor instead.
func (*EthereumNetworkInfo) Descriptor() ([]byte, []int) {
	return file_messages_ethereum_definitions_proto_rawDescGZIP(), []int{0}
}

func (x *EthereumNetworkInfo) GetChainId() uint64 {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return 0
}

func (x *EthereumNetworkInfo) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *EthereumNetworkInfo) GetSlip44() uint32 {
	if x != nil && x.Slip44 != nil {
		return *x.Slip44
	}
	return 0
}

func (x *EthereumNetworkInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// *
// Ethereum token definition. Used to (de)serialize the definition.
//
// Definition types should not be cross-parseable, i.e., it should not be possible to
// incorrectly parse network info as token info or vice versa.
// To achieve that, the first field is wire type length-delimited while the second field
// is wire type varint. Both are a mismatch for the network definition.
//
// @embed
type EthereumTokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  []byte  `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	ChainId  *uint64 `protobuf:"varint,2,req,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	Symbol   *string `protobuf:"bytes,3,req,name=symbol" json:"symbol,omitempty"`
	Decimals *uint32 `protobuf:"varint,4,req,name=decimals" json:"decimals,omitempty"`
	Name     *string `protobuf:"bytes,5,req,name=name" json:"name,omitempty"`
}

func (x *EthereumTokenInfo) Reset() {
	*x = EthereumTokenInfo{}
	mi := &file_messages_ethereum_definitions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthereumTokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumTokenInfo) ProtoMessage() {}

func (x *EthereumTokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_ethereum_definitions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumTokenInfo.ProtoReflect.Descriptor instead.
func (*EthereumTokenInfo) Descriptor() ([]byte, []int) {
	return file_messages_ethereum_definitions_proto_rawDescGZIP(), []int{1}
}

func (x *EthereumTokenInfo) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *EthereumTokenInfo) GetChainId() uint64 {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return 0
}

func (x *EthereumTokenInfo) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *EthereumTokenInfo) GetDecimals() uint32 {
	if x != nil && x.Decimals != nil {
		return *x.Decimals
	}
	return 0
}

func (x *EthereumTokenInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// *
// Contains an encoded Ethereum network and/or token definition. See ethereum-definitions.md for details.
// @embed
type EthereumDefinitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedNetwork []byte `protobuf:"bytes,1,opt,name=encoded_network,json=encodedNetwork" json:"encoded_network,omitempty"` // encoded Ethereum network
	EncodedToken   []byte `protobuf:"bytes,2,opt,name=encoded_token,json=encodedToken" json:"encoded_token,omitempty"`       // encoded Ethereum token
}

func (x *EthereumDefinitions) Reset() {
	*x = EthereumDefinitions{}
	mi := &file_messages_ethereum_definitions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthereumDefinitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthereumDefinitions) ProtoMessage() {}

func (x *EthereumDefinitions) ProtoReflect() protoreflect.Message {
	mi := &file_messages_ethereum_definitions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthereumDefinitions.ProtoReflect.Descriptor instead.
func (*EthereumDefinitions) Descriptor() ([]byte, []int) {
	return file_messages_ethereum_definitions_proto_rawDescGZIP(), []int{2}
}

func (x *EthereumDefinitions) GetEncodedNetwork() []byte {
	if x != nil {
		return x.EncodedNetwork
	}
	return nil
}

func (x *EthereumDefinitions) GetEncodedToken() []byte {
	if x != nil {
		return x.EncodedToken
	}
	return nil
}

var File_messages_ethereum_definitions_proto protoreflect.FileDescriptor

var file_messages_ethereum_definitions_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x74,
	0x0a, 0x13, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x69, 0x70,
	0x34, 0x34, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x69, 0x70, 0x34, 0x34,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x30, 0x0a, 0x16,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x42, 0x47,
	0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69, 0x6c, 0x61, 0x62,
	0x73, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x20, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
}

var (
	file_messages_ethereum_definitions_proto_rawDescOnce sync.Once
	file_messages_ethereum_definitions_proto_rawDescData = file_messages_ethereum_definitions_proto_rawDesc
)

func file_messages_ethereum_definitions_proto_rawDescGZIP() []byte {
	file_messages_ethereum_definitions_proto_rawDescOnce.Do(func() {
		file_messages_ethereum_definitions_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_ethereum_definitions_proto_rawDescData)
	})
	return file_messages_ethereum_definitions_proto_rawDescData
}

var file_messages_ethereum_definitions_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_ethereum_definitions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_messages_ethereum_definitions_proto_goTypes = []any{
	(EthereumDefinitionType)(0), // 0: hw.trezor.messages.ethereum_definitions.EthereumDefinitionType
	(*EthereumNetworkInfo)(nil), // 1: hw.trezor.messages.ethereum_definitions.EthereumNetworkInfo
	(*EthereumTokenInfo)(nil),   // 2: hw.trezor.messages.ethereum_definitions.EthereumTokenInfo
	(*EthereumDefinitions)(nil), // 3: hw.trezor.messages.ethereum_definitions.EthereumDefinitions
}
var file_messages_ethereum_definitions_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_messages_ethereum_definitions_proto_init() }
func file_messages_ethereum_definitions_proto_init() {
	if File_messages_ethereum_definitions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_ethereum_definitions_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_ethereum_definitions_proto_goTypes,
		DependencyIndexes: file_messages_ethereum_definitions_proto_depIdxs,
		EnumInfos:         file_messages_ethereum_definitions_proto_enumTypes,
		MessageInfos:      file_messages_ethereum_definitions_proto_msgTypes,
	}.Build()
	File_messages_ethereum_definitions_proto = out.File
	file_messages_ethereum_definitions_proto_rawDesc = nil
	file_messages_ethereum_definitions_proto_goTypes = nil
	file_messages_ethereum_definitions_proto_depIdxs = nil
}
