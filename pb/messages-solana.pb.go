// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: messages-solana.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request: Ask device for public key corresponding to address_n path
// @start
// @next SolanaPublicKey
// @next Failure
type SolanaGetPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN    []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`          // BIP-32 path to derive the key from master node
	ShowDisplay *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"` // optionally show on display before sending the result
}

func (x *SolanaGetPublicKey) Reset() {
	*x = SolanaGetPublicKey{}
	mi := &file_messages_solana_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaGetPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaGetPublicKey) ProtoMessage() {}

func (x *SolanaGetPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaGetPublicKey.ProtoReflect.Descriptor instead.
func (*SolanaGetPublicKey) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{0}
}

func (x *SolanaGetPublicKey) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *SolanaGetPublicKey) GetShowDisplay() bool {
	if x != nil && x.ShowDisplay != nil {
		return *x.ShowDisplay
	}
	return false
}

// *
// Response: Contains public key derived from device private seed
// @end
type SolanaPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,req,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (x *SolanaPublicKey) Reset() {
	*x = SolanaPublicKey{}
	mi := &file_messages_solana_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaPublicKey) ProtoMessage() {}

func (x *SolanaPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaPublicKey.ProtoReflect.Descriptor instead.
func (*SolanaPublicKey) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{1}
}

func (x *SolanaPublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// *
// Request: Ask device for Solana address
// @start
// @next SolanaAddress
// @next Failure
type SolanaGetAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN    []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`          // BIP-32 path to derive the key from master node
	ShowDisplay *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"` // optionally show on display before sending the result
	Chunkify    *bool    `protobuf:"varint,3,opt,name=chunkify" json:"chunkify,omitempty"`                          // display the address in chunks of 4 characters
}

func (x *SolanaGetAddress) Reset() {
	*x = SolanaGetAddress{}
	mi := &file_messages_solana_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaGetAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaGetAddress) ProtoMessage() {}

func (x *SolanaGetAddress) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaGetAddress.ProtoReflect.Descriptor instead.
func (*SolanaGetAddress) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{2}
}

func (x *SolanaGetAddress) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *SolanaGetAddress) GetShowDisplay() bool {
	if x != nil && x.ShowDisplay != nil {
		return *x.ShowDisplay
	}
	return false
}

func (x *SolanaGetAddress) GetChunkify() bool {
	if x != nil && x.Chunkify != nil {
		return *x.Chunkify
	}
	return false
}

// *
// Response: Contains a Solana address derived from device private seed
// @end
type SolanaAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *string `protobuf:"bytes,1,req,name=address" json:"address,omitempty"` // Solana address as Base58 encoded string
}

func (x *SolanaAddress) Reset() {
	*x = SolanaAddress{}
	mi := &file_messages_solana_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAddress) ProtoMessage() {}

func (x *SolanaAddress) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaAddress.ProtoReflect.Descriptor instead.
func (*SolanaAddress) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{3}
}

func (x *SolanaAddress) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

// *
// @embed
type SolanaTxTokenAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAddress  *string `protobuf:"bytes,1,req,name=base_address,json=baseAddress" json:"base_address,omitempty"`
	TokenProgram *string `protobuf:"bytes,2,req,name=token_program,json=tokenProgram" json:"token_program,omitempty"`
	TokenMint    *string `protobuf:"bytes,3,req,name=token_mint,json=tokenMint" json:"token_mint,omitempty"`
	TokenAccount *string `protobuf:"bytes,4,req,name=token_account,json=tokenAccount" json:"token_account,omitempty"`
}

func (x *SolanaTxTokenAccountInfo) Reset() {
	*x = SolanaTxTokenAccountInfo{}
	mi := &file_messages_solana_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaTxTokenAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaTxTokenAccountInfo) ProtoMessage() {}

func (x *SolanaTxTokenAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaTxTokenAccountInfo.ProtoReflect.Descriptor instead.
func (*SolanaTxTokenAccountInfo) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{4}
}

func (x *SolanaTxTokenAccountInfo) GetBaseAddress() string {
	if x != nil && x.BaseAddress != nil {
		return *x.BaseAddress
	}
	return ""
}

func (x *SolanaTxTokenAccountInfo) GetTokenProgram() string {
	if x != nil && x.TokenProgram != nil {
		return *x.TokenProgram
	}
	return ""
}

func (x *SolanaTxTokenAccountInfo) GetTokenMint() string {
	if x != nil && x.TokenMint != nil {
		return *x.TokenMint
	}
	return ""
}

func (x *SolanaTxTokenAccountInfo) GetTokenAccount() string {
	if x != nil && x.TokenAccount != nil {
		return *x.TokenAccount
	}
	return ""
}

// *
// @embed
type SolanaTxAdditionalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAccountsInfos []*SolanaTxTokenAccountInfo `protobuf:"bytes,1,rep,name=token_accounts_infos,json=tokenAccountsInfos" json:"token_accounts_infos,omitempty"`
}

func (x *SolanaTxAdditionalInfo) Reset() {
	*x = SolanaTxAdditionalInfo{}
	mi := &file_messages_solana_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaTxAdditionalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaTxAdditionalInfo) ProtoMessage() {}

func (x *SolanaTxAdditionalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaTxAdditionalInfo.ProtoReflect.Descriptor instead.
func (*SolanaTxAdditionalInfo) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{5}
}

func (x *SolanaTxAdditionalInfo) GetTokenAccountsInfos() []*SolanaTxTokenAccountInfo {
	if x != nil {
		return x.TokenAccountsInfos
	}
	return nil
}

// *
// Request: Ask device to sign a Solana transaction
// @start
// @next SolanaTxSignature
// @next Failure
type SolanaSignTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN       []uint32                `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`            // BIP-32 path to derive the key to sign with
	SerializedTx   []byte                  `protobuf:"bytes,2,req,name=serialized_tx,json=serializedTx" json:"serialized_tx,omitempty"` // serialized tx to be signed
	AdditionalInfo *SolanaTxAdditionalInfo `protobuf:"bytes,3,opt,name=additional_info,json=additionalInfo" json:"additional_info,omitempty"`
}

func (x *SolanaSignTx) Reset() {
	*x = SolanaSignTx{}
	mi := &file_messages_solana_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaSignTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaSignTx) ProtoMessage() {}

func (x *SolanaSignTx) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaSignTx.ProtoReflect.Descriptor instead.
func (*SolanaSignTx) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{6}
}

func (x *SolanaSignTx) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *SolanaSignTx) GetSerializedTx() []byte {
	if x != nil {
		return x.SerializedTx
	}
	return nil
}

func (x *SolanaSignTx) GetAdditionalInfo() *SolanaTxAdditionalInfo {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// *
// Response: Contains the transaction signature
// @end
type SolanaTxSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"` // tx signature
}

func (x *SolanaTxSignature) Reset() {
	*x = SolanaTxSignature{}
	mi := &file_messages_solana_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolanaTxSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaTxSignature) ProtoMessage() {}

func (x *SolanaTxSignature) ProtoReflect() protoreflect.Message {
	mi := &file_messages_solana_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaTxSignature.ProtoReflect.Descriptor instead.
func (*SolanaTxSignature) Descriptor() ([]byte, []int) {
	return file_messages_solana_proto_rawDescGZIP(), []int{7}
}

func (x *SolanaTxSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_messages_solana_proto protoreflect.FileDescriptor

var file_messages_solana_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x73, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a,
	0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x73, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x22, 0x54, 0x0a, 0x12, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f,
	0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x30, 0x0a, 0x0f, 0x53, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x6e, 0x0a, 0x10, 0x53, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x66, 0x79, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x18, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x54, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7f,
	0x0a, 0x16, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x54, 0x78, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a,
	0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x73, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x54, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0xac, 0x01, 0x0a, 0x0c, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x54, 0x78, 0x12, 0x5a, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x77,
	0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x54, 0x78,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x31,
	0x0a, 0x11, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x54, 0x78, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65,
}

var (
	file_messages_solana_proto_rawDescOnce sync.Once
	file_messages_solana_proto_rawDescData = file_messages_solana_proto_rawDesc
)

func file_messages_solana_proto_rawDescGZIP() []byte {
	file_messages_solana_proto_rawDescOnce.Do(func() {
		file_messages_solana_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_solana_proto_rawDescData)
	})
	return file_messages_solana_proto_rawDescData
}

var file_messages_solana_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_messages_solana_proto_goTypes = []any{
	(*SolanaGetPublicKey)(nil),       // 0: hw.trezor.messages.solana.SolanaGetPublicKey
	(*SolanaPublicKey)(nil),          // 1: hw.trezor.messages.solana.SolanaPublicKey
	(*SolanaGetAddress)(nil),         // 2: hw.trezor.messages.solana.SolanaGetAddress
	(*SolanaAddress)(nil),            // 3: hw.trezor.messages.solana.SolanaAddress
	(*SolanaTxTokenAccountInfo)(nil), // 4: hw.trezor.messages.solana.SolanaTxTokenAccountInfo
	(*SolanaTxAdditionalInfo)(nil),   // 5: hw.trezor.messages.solana.SolanaTxAdditionalInfo
	(*SolanaSignTx)(nil),             // 6: hw.trezor.messages.solana.SolanaSignTx
	(*SolanaTxSignature)(nil),        // 7: hw.trezor.messages.solana.SolanaTxSignature
}
var file_messages_solana_proto_depIdxs = []int32{
	4, // 0: hw.trezor.messages.solana.SolanaTxAdditionalInfo.token_accounts_infos:type_name -> hw.trezor.messages.solana.SolanaTxTokenAccountInfo
	5, // 1: hw.trezor.messages.solana.SolanaSignTx.additional_info:type_name -> hw.trezor.messages.solana.SolanaTxAdditionalInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_messages_solana_proto_init() }
func file_messages_solana_proto_init() {
	if File_messages_solana_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_solana_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_solana_proto_goTypes,
		DependencyIndexes: file_messages_solana_proto_depIdxs,
		MessageInfos:      file_messages_solana_proto_msgTypes,
	}.Build()
	File_messages_solana_proto = out.File
	file_messages_solana_proto_rawDesc = nil
	file_messages_solana_proto_goTypes = nil
	file_messages_solana_proto_depIdxs = nil
}
